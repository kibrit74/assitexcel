import React from 'react';
import { 
    SearchIcon, TextIcon, IfIcon, DateIcon, LayersIcon, CalculatorIcon, RobotIcon, MoneyIcon, ToolsIcon, GlobeIcon, TrendingUpIcon,
    AnimatedVlookupSVG, AnimatedIndexMatchSVG, AnimatedXlookupSVG, AnimatedIndirectSVG, AnimatedOffsetSVG, AnimatedRowColSVG,
    AnimatedIfSVG, AnimatedAndOrSVG, AnimatedIfsSVG, AnimatedIferrorSVG, AnimatedSwitchSVG, AnimatedIsBlankSVG,
    AnimatedConcatSVG, AnimatedLeftRightMidSVG, AnimatedTrimSVG, AnimatedSubstituteSVG, AnimatedLenSVG, AnimatedUpperLowerProperSVG, AnimatedFindSVG,
    AnimatedSumifSVG, AnimatedSumifsSVG, AnimatedCountifSVG, AnimatedAverageifSVG, AnimatedSumProductSVG, AnimatedMinMaxSVG, AnimatedRandbetweenSVG, AnimatedConvertSVG,
    AnimatedTodayNowSVG, AnimatedNetworkdaysSVG, AnimatedWorkdaySVG, AnimatedDateSVG, AnimatedDatepartsSVG, AnimatedEdateSVG, AnimatedEomonthSVG, AnimatedWeekdaySVG, AnimatedWeeknumSVG,
    AnimatedFilterSVG, AnimatedSortSVG, AnimatedUniqueSVG, AnimatedSequenceSVG,
    AnimatedPmtSVG, AnimatedFvSVG, AnimatedPvSVG, AnimatedNperSVG,
    // FIX: Renamed AnimatedMacroSortSVG to AnimatedMacroSortSheetsSVG to match the exported component name.
    AnimatedMacroDeleteDuplicatesSVG, AnimatedMacroAutofitSVG, AnimatedMacroSaveAsPDFSVG, AnimatedMacroUnhideSheetsSVG, AnimatedMacroFormulasToValuesSVG, AnimatedMacroSortSheetsSVG,
    AnimatedPowerQuerySVG, AnimatedMacroDeleteEmptyRowsSVG, AnimatedMacroExportSheetsSVG, AnimatedMacroTocSVG, AnimatedMacroHighlightConditionalSVG, AnimatedMacroTimestampSVG,
    AnimatedMacroCombineSheetsSVG, AnimatedMacroProtectSheetsSVG, AnimatedMacroUnprotectSheetsSVG, AnimatedMacroFindReplaceAllSVG,
    AnimatedWebServiceSVG, AnimatedFilterXmlSVG, AnimatedSubtotalSVG, AnimatedAggregateSVG, AnimatedCfHighlightRowSVG,
    AnimatedMacroRefreshPivotsSVG, AnimatedMacroFormatAsTableSVG, AnimatedMacroSendEmailSVG, AnimatedMacroAddHeaderFooterSVG,
    AnimatedMacroTrimAllCellsSVG, AnimatedMacroHighlightNegativesSVG, AnimatedMacroAddBordersSVG, AnimatedMacroRemoveHyperlinksSVG, AnimatedMacroTextToColumnsSVG, AnimatedMacroGoToSheetSVG,
    AnimatedMacroCreateChartSVG, AnimatedMacroFreezeTopRowSVG, AnimatedMacroInsertCheckboxesSVG, AnimatedMacroExportSelectionToCSVSVG, AnimatedMacroCreateDropdownListSVG,
    AnimatedMacroCommentOnCellsWithValueSVG, AnimatedMacroCountColoredCellsSVG, AnimatedMacroBreakAllLinksSVG, AnimatedMacroZoomToSelectionSVG, AnimatedMacroInsertSerialNumbersSVG,
    AnimatedMacroSaveAndCloseSVG, AnimatedMacroToggleGridlinesSVG, AnimatedMacroCreateSummarySheetSVG
} from '../components/AnimatedSvgs';

interface Example {
    id: string;
    title: string;
    description: string;
    prompt: string;
    helpDescription: string;
    svgComponent: React.FC;
    stars: number;
    syntax?: string;
    syntaxExample?: string;
    code?: string;
    steps?: string[];
}

interface HelpContentGroup {
    category: string;
    icon: React.FC;
    examples: Example[];
    isMacro?: boolean;
    isTool?: boolean;
}


export const helpContent: HelpContentGroup[] = [
    {
        category: 'Arama ve Referans Formülleri',
        icon: SearchIcon,
        examples: [
            { id: "vlookup", title: "DÜŞEYARA (VLOOKUP)", description: "Bir tablodaki değere karşılık gelen başka bir değeri bulun.", prompt: "'[Kaynak Sayfa]' A sütunundaki değere karşılık gelen, '[Hedef Sayfa]' B sütunundaki değeri getir.", helpDescription: "Bir listede bir bilgiyi bulur ve onunla aynı satırdaki başka bir bilgiyi size getirir.", syntax: "DÜŞEYARA(aranan_değer; tablo_dizisi; sütun_indis_sayısı; [aralık_bak])", syntaxExample: "A2'deki ürün kodunu, 'Ürünler' sayfasındaki listede arar ve o ürünün fiyatını bulup yazar.", svgComponent: AnimatedVlookupSVG, stars: 0 },
            { id: "indexmatch", title: "İNDİS+KAÇINCI (INDEX+MATCH)", description: "Değeri sağdaki bir sütunda arayıp soldan sonuç getirin.", prompt: "'[Sayfa Adı]' B sütunundaki değere göre arama yap ve aynı satıradaki A sütunundaki değeri getir.", helpDescription: "DÜŞEYARA'nın daha güçlü halidir. Bir bilgiyi istediğiniz sütunda arar ve istediğiniz sütundaki karşılığını getirir (sola doğru arama da yapabilir).", syntax: "=İNDİS(sonuç_sütunu; KAÇINCI(aranan_değer; arama_sütunu; 0))", syntaxExample: "C1'deki ismi, B sütununda arar ve aynı satıra denk gelen sicil numarasını A sütunundan getirir.", svgComponent: AnimatedIndexMatchSVG, stars: 0 },
            { id: "xlookup", title: "ÇAPRAZARA (XLOOKUP)", description: "En esnek arama formülüyle (sola, sağa) arama yapın.", prompt: "'[Sayfa Adı]' C sütunundaki ID'ye göre arama yapıp A sütunundaki ürün adını getir.", helpDescription: "En yeni ve en kolay arama formülüdür. Bir şeyi bir listede arayıp, karşılığını başka bir listeden getirmek için kullanılır. (Excel 365/2021+)", syntax: "=ÇAPRAZARA(aranan_değer; arama_dizisi; döndürülen_dizi; [eğer_bulunamazsa])", syntaxExample: "A2'deki değeri Personel sayfasının C sütununda arar, bulunca A sütunundaki karşılığını getirir. Bulamazsa 'Bulunamadı' yazar.", svgComponent: AnimatedXlookupSVG, stars: 0 },
            { id: "indirect", title: "DOLAYLI (INDIRECT)", description: "Metin olarak yazılmış bir hücre adresini gerçek bir başvuruya çevirin.", prompt: "A1 hücresinde yazan sayfa adından veri al.", helpDescription: "Bir hücreye yazdığınız metni (örneğin 'A1:A10') gerçek bir hücre adresi gibi kullanmanızı sağlar. Dinamik formüller için çok kullanışlıdır.", syntax: "=DOLAYLI(başvuru_metni)", syntaxExample: "Eğer A1 hücresinde 'C1:C10' metni yazıyorsa, =TOPLA(DOLAYLI(A1)) formülü C1'den C10'a kadar olan hücreleri toplar.", svgComponent: AnimatedIndirectSVG, stars: 0 },
            { id: "offset", title: "KAYDIR (OFFSET)", description: "Başlangıçtan belirli satır/sütun uzaktaki veriyi alın.", prompt: "A1 hücresinden başlayarak 3 satır aşağı ve 2 sütun sağdaki hücrenin değerini getir.", helpDescription: "Belirli bir başlangıç noktasından, belirttiğiniz sayıda satır ve sütun kadar uzaktaki bir hücreye veya hücre aralığına başvuru yapar.", syntax: "=KAYDIR(başvuru; satır; sütun; [yükseklik]; [genişlik])", syntaxExample: "A1 hücresinden başlayarak 2 satır aşağı ve 1 sütun sağdaki hücrenin (C3) değerini verir.", svgComponent: AnimatedOffsetSVG, stars: 0 },
            { id: "rowcol", title: "SATIR/SÜTUN (ROW/COLUMN)", description: "Bir hücrenin satır veya sütun numarasını alın.", prompt: "C5 hücresinin satır numarasını bul.", helpDescription: "Bir hücre başvurusunun satır veya sütun numarasını verir. Boş bırakılırsa, formülün bulunduğu hücrenin bilgisini döndürür.", syntax: "=SATIR([başvuru])", syntaxExample: "=SATIR(C4) formülü 4 sonucunu, =SÜTUN(C4) formülü ise 3 sonucunu verir.", svgComponent: AnimatedRowColSVG, stars: 0 },
        ]
    },
    {
        category: 'Mantıksal İşlemler',
        icon: IfIcon,
        examples: [
            { id: "if", title: "Basit Koşul (EĞER)", description: "Bir koşul doğruysa bir değer, yanlışsa başka bir değer döndürün.", prompt: "Eğer A sütunundaki değer 100'den büyükse 'Yüksek', değilse 'Düşük' yaz.", helpDescription: "Bir şart belirtirsiniz; eğer şart doğruysa bir şey yapar, yanlışsa başka bir şey yapar. Kısacası 'Eğer böyleyse şunu yap, değilse bunu yap' demektir.", syntax: "=EĞER(mantıksal_sınama; [eğer_doğruysa_değer]; [eğer_yanlışsa_değer])", syntaxExample: "Eğer A2 hücresindeki not 50'den büyükse 'Geçti', değilse 'Kaldı' yazar.", svgComponent: AnimatedIfSVG, stars: 0 },
            { id: "andor", title: "Çoklu Koşullar (VE/YADA)", description: "Birden fazla koşulun hepsinin (VE) veya herhangi birinin (YADA) doğruluğunu test edin.", prompt: "Eğer A sütunundaki durum 'Onaylandı' VE B sütunundaki tutar 500'den büyükse 'Öncelikli' yaz.", helpDescription: "EĞER formülüyle birlikte kullanılır. VE, 'hem bu hem de şu doğruysa' demektir. YADA, 'bu veya şu doğruysa' demektir.", syntax: "=EĞER(VE(A2>50; B2='Evet'); 'Bonus'; 'Yok')", syntaxExample: "Bir personelin hem puanı 50'den büyükse hem de durumu 'Evet' ise hücreye 'Bonus' yazar, aksi halde 'Yok' yazar.", svgComponent: AnimatedAndOrSVG, stars: 0 },
            { id: "ifs", title: "Zincirleme Koşul (ÇOKEĞER)", description: "Birden fazla koşulu sırayla test edip ilk doğru olanın sonucunu alın.", prompt: "Eğer A sütunundaki puan 90'dan büyükse 'A', 70'ten büyükse 'B', değilse 'C' yaz.", helpDescription: "İç içe EĞER yazma karmaşasını bitirir. Birden çok koşulu sırayla kontrol eder ve ilk doğru olanın sonucunu döndürür. (Excel 2019+)", syntax: "=ÇOKEĞER(koşul1; değer1; koşul2; değer2; ...)", syntaxExample: "Puan 90'dan büyükse 'A', 80'den büyükse 'B', 60'dan büyükse 'C' yazar, değilse 'F' yazar.", svgComponent: AnimatedIfsSVG, stars: 0 },
            { id: "iferror", title: "Hata Yönetimi (EĞERHATA)", description: "Formül bir hata döndürürse, özel bir mesaj gösterin.", prompt: "Arama formülü bir sonuç bulamazsa, 'Bulunamadı' yazdır.", helpDescription: "Formülleriniz çirkin hata mesajları (#YOK gibi) verdiğinde, onun yerine istediğiniz bir yazıyı (örneğin 'Bulunamadı') göstermenizi sağlar.", syntax: "=EĞERHATA(değer; eğer_hatalıysa_değer)", syntaxExample: "DÜŞEYARA formülü bir sonuç bulamazsa hata vermek yerine hücrede 'Bulunamadı' yazar.", svgComponent: AnimatedIferrorSVG, stars: 0 },
            { id: "switch", title: "Değere Göre Değiştir (DEĞİŞTİR)", description: "Bir değeri, listedeki karşılığıyla değiştirin.", prompt: "Eğer A sütununda 1 yazıyorsa 'İK', 2 yazıyorsa 'Satış', 3 yazıyorsa 'Pazarlama' yaz, hiçbiri değilse 'Diğer' yaz.", helpDescription: "Bir değeri, bir liste içindeki eşleşen değerle değiştirir. Eşleşme bulunmazsa varsayılan bir sonuç döndürür. (Excel 2019+)", syntax: "=DEĞİŞTİR(ifade; değer1; sonuç1; [varsayılan_veya_değer2...])", syntaxExample: "Hücrede 1 yazıyorsa 'Kötü', 2 ise 'Orta', 3 ise 'İyi' yazar, hiçbiri değilse 'Belirsiz' sonucunu verir.", svgComponent: AnimatedSwitchSVG, stars: 0 },
            { id: "isblank", title: "Boş Hücre Kontrolü (EBOŞSA)", description: "Bir hücrenin boş olup olmadığını kontrol edin.", prompt: "Eğer A sütunundaki hücre boşsa 'Eksik Bilgi' yaz.", helpDescription: "Bir hücrenin boş olup olmadığını kontrol eder. Boşsa DOĞRU, doluysa YANLIŞ sonucunu verir.", syntax: "=EBOŞSA(değer)", syntaxExample: "A1 hücresi tamamen boşsa DOĞRU döndürür. İçinde formül olsa bile boşluk döndürüyorsa yine DOĞRU olur.", svgComponent: AnimatedIsBlankSVG, stars: 0 },
        ]
    },
    {
        category: 'Metin İşlemleri',
        icon: TextIcon,
        examples: [
            { id: "concat", title: "Metinleri Birleştir", description: "İki veya daha fazla sütundaki metinleri tek bir hücrede birleştirin.", prompt: "A sütunundaki ad ile B sütunundaki soyadı birleştirerek aralarına bir boşluk koy.", helpDescription: "Farklı hücrelerddaki yazıları tek bir hücrede birleştirir. Genellikle ad ve soyadı birleştirmek için kullanılır.", syntax: "=BİRLEŞTİR(metin1; metin2; ...)", syntaxExample: "A2'deki 'İsim' ile B2'deki 'Soyisim'i birleştirip 'İsim Soyisim' sonucunu verir.", svgComponent: AnimatedConcatSVG, stars: 0 },
            { id: "leftrightmid", title: "Metnin Bir Kısmını Al", description: "Bir metnin başından (SOLDAN), sonundan (SAĞDAN) veya ortasından (PARÇAAL) belirli sayıda karakter alın.", prompt: "A sütunundaki metnin ilk 5 karakterini al.", helpDescription: "Bir hücredeki metnin istediğiniz bir bölümünü almanızı sağlar.", syntax: "=SOLDAN(metin; [sayı_karakterler])", syntaxExample: "'İstanbul' metni için =SOLDAN(A1; 4) 'İsta' sonucunu verir.", svgComponent: AnimatedLeftRightMidSVG, stars: 0 },
            { id: "trim", title: "Boşlukları Temizle (KIRP)", description: "Metnin başındaki, sonundaki ve içindeki fazla boşlukları temizleyin.", prompt: "A sütunundaki hücrelerdeki gereksiz boşlukları temizle.", helpDescription: "Bir hüredeki metnin başında ve sonunda bulunan gereksiz boşlukları temizler. Kelimeler arasındaki tek boşlukları korur.", syntax: "=KIRP(metin)", syntaxExample: "'  İsim   Soyisim  ' metnini 'İsim Soyisim' haline getirir.", svgComponent: AnimatedTrimSVG, stars: 0 },
            { id: "substitute", title: "Metni Değiştir (YERİNEKOY)", description: "Bir metin içindeki belirli bir karakteri veya kelimeyi başkasıyla değiştirin.", prompt: "A sütunundaki metinlerde geçen 'TL' ifadesini 'TRY' olarak değiştir.", helpDescription: "Bir metin içindeki eski bir metni yeni bir metinle değiştirir.", syntax: "=YERİNEKOY(metin; eski_metin; yeni_metin; [kaçıncı_eski_metin])", syntaxExample: "'Elma, Armut, Elma' metnindeki tüm 'Elma'ları 'Muz' ile değiştirir ve 'Muz, Armut, Muz' sonucunu verir.", svgComponent: AnimatedSubstituteSVG, stars: 0 },
            { id: "len", title: "Karakter Sayısı (UZUNLUK)", description: "Bir hücredeki metnin karakter sayısını (boşluklar dahil) bulun.", prompt: "A sütunundaki her hücredeki karakter sayısını hesapla.", helpDescription: "Bir hücredeki metnin boşluklar dahil toplam karakter sayısını verir.", syntax: "=UZUNLUK(metin)", syntaxExample: "'Merhaba' metni için 7 sonucunu döndürür.", svgComponent: AnimatedLenSVG, stars: 0 },
            { id: "upperlowerproper", title: "Büyük/Küçük Harf", description: "Metni tamamen BÜYÜK harfe, tamamen küçük harfe veya İlk Harfleri Büyük (YAZIM.DÜZENİ) yapın.", prompt: "A sütunundaki isimlerin sadece ilk harflerini büyük yap.", helpDescription: "Metnin harf durumunu değiştirir.", syntax: "=YAZIM.DÜZENİ(metin)", syntaxExample: "'AHMET YILMAZ' metnini 'Ahmet Yilmaz' yapar.", svgComponent: AnimatedUpperLowerProperSVG, stars: 0 },
            { id: "find", title: "Metin Bul (MBUL)", description: "Bir metnin başka bir metin içinde kaçıncı karakterden başladığını bulun.", prompt: "A sütunundaki metinlerde '@' işaretinin konumunu bul.", helpDescription: "Bir metin parçasının, başka bir metin içinde kaçıncı karakterden başladığını bulur (Büyük/küçük harfe duyarlıdır).", syntax: "=MBUL(bul_metin; metin; [başlangıç_sayısı])", syntaxExample: "'deneme@mail.com' metninde '@' işaretini arar ve 7 sonucunu verir.", svgComponent: AnimatedFindSVG, stars: 0 },
        ]
    },
    {
        category: 'Matematiksel ve İstatistiksel',
        icon: CalculatorIcon,
        examples: [
            { id: "sumif", title: "Koşullu Toplama (ETOPLA)", description: "Belirli bir koşula uyan hücreleri toplayın.", prompt: "A sütununda 'Meyve' yazan satırlardaki B sütunundaki değerleri topla.", helpDescription: "Sadece belirli bir şartı sağlayan sayıları toplar.", syntax: "=ETOPLA(aralık; ölçüt; [toplam_aralığı])", syntaxExample: "A sütununda 'Elma' yazan satırlara denk gelen B sütunundaki miktarları toplar.", svgComponent: AnimatedSumifSVG, stars: 0 },
            { id: "sumifs", title: "Çok Koşullu Toplama (ÇOKETOPLA)", description: "Birden fazla koşula uyan hücreleri toplayın.", prompt: "A sütununda 'Meyve' VE B sütununda 'Marmara' yazan satırlardaki C sütunundaki değerleri topla.", helpDescription: "Birden fazla şartı aynı anda sağlayan sayıları toplar.", syntax: "=ÇOKETOPLA(toplam_aralığı; ölçüt_aralığı1; ölçüt1; [ölçüt_aralığı2; ölçüt2]; ...)", syntaxExample: "Hem A sütununda 'Elma' yazan hem de B sütununda 'Adana' yazan satırlardaki C sütunundaki miktarları toplar.", svgComponent: AnimatedSumifsSVG, stars: 0 },
            { id: "countif", title: "Koşullu Sayma (EĞERSAY)", description: "Belirli bir koşula uyan hücrelerin sayısını bulun.", prompt: "A sütununda 'Geçti' yazan kaç hücre olduğunu say.", helpDescription: "Belirli bir şartı sağlayan hücrelerin sayısını verir.", syntax: "=EĞERSAY(aralık; ölçüt)", syntaxExample: "A1:A100 aralığında kaç tane 'Elma' hücresi olduğunu sayar.", svgComponent: AnimatedCountifSVG, stars: 0 },
            { id: "averageif", title: "Koşullu Ortalama (EĞERORTALAMA)", description: "Belirli bir koşula uyan sayıların ortalamasını alın.", prompt: "A sütununda 'Satış' departmanı olanların B sütunundaki primlerinin ortalamasını al.", helpDescription: "Sadece belirli bir şartı sağlayan sayıların ortalamasını alır.", syntax: "=EĞERORTALAMA(aralık; ölçüt; [ortalama_aralığı])", syntaxExample: "A sütununda 'Mühendis' yazanların B sütunundaki maaşlarının ortalamasını bulur.", svgComponent: AnimatedAverageifSVG, stars: 0 },
            { id: "sumproduct", title: "Çarpımların Toplamı (TOPLA.ÇARPIM)", description: "İki veya daha fazla sütundaki değerleri karşılıklı çarpıp sonuçları toplayın.", prompt: "A sütunundaki adetlerle B sütunundaki birim fiyatları çarp ve genel toplamı bul.", helpDescription: "İki veya daha fazla listedeki sayıları karşılıklı olarak çarpar ve çıkan sonuçların hepsini toplar. Genellikle ağırlıklı ortalama veya toplam ciro hesaplamak için kullanılır.", syntax: "=TOPLA.ÇARPIM(dizi1; [dizi2]; ...)", syntaxExample: "A sütunundaki ürün adetleri ile B sütunundaki birim fiyatları karşılıklı çarparak toplam ciroyu tek formülde bulur.", svgComponent: AnimatedSumProductSVG, stars: 0 },
            { id: "minmax", title: "En Büyük / En Küçük (MAK/MİN)", description: "Bir aralıktaki en büyük veya en küçük değeri bulun.", prompt: "A sütunundaki en yüksek notu bul.", helpDescription: "Bir grup sayı içindeki en büyük (MAK) veya en küçük (MİN) değeri bulur.", syntax: "=MAK(sayı1; [sayı2]; ...)", syntaxExample: "A1:A100 aralığındaki en yüksek maaşı bulur.", svgComponent: AnimatedMinMaxSVG, stars: 0 },
            { id: "randbetween", title: "Rastgele Sayı Üret (RASTGELEARADA)", description: "Belirttiğiniz iki sayı arasında rastgele bir tam sayı üretin.", prompt: "1 ile 100 arasında rastgele bir sayı üret.", helpDescription: "Belirttiğiniz iki tam sayı arasında rastgele bir tam sayı üretir. Örnek veri oluşturmak için kullanışlıdır.", syntax: "=RASTGELEARADA(alt; üst)", syntaxExample: "=RASTGELEARADA(1; 100) formülü, 1 ve 100 dahil olmak üzere bu aralıkta rastgele bir sayı döndürür.", svgComponent: AnimatedRandbetweenSVG, stars: 0 },
            { id: "convert", title: "Birimleri Dönüştür (ÇEVİR)", description: "Farklı ölçü birimleri arasında dönüşüm yapın (kg'dan libreye, metreden fite vb.).", prompt: "A1 hücresindeki kilogram değerini libreye çevir.", helpDescription: "Sayıları bir ölçü biriminden diğerine dönüştürür. Ağırlık, mesafe, sıcaklık gibi birçok birimi destekler.", syntax: "=ÇEVİR(sayı; başlangıç_birimi; bitiş_birimi)", syntaxExample: "=ÇEVİR(10; 'kg'; 'lbm') formülü 10 kilogramı libreye çevirir ve yaklaşık 22.04 sonucunu verir.", svgComponent: AnimatedConvertSVG, stars: 0 },
        ]
    },
    {
        category: 'Tarih ve Saat Fonksiyonları',
        icon: DateIcon,
        examples: [
            { id: "todaynow", title: "Güncel Tarih/Saat (BUGÜN/ŞİMDİ)", description: "Geçerli tarihi veya tarih ve saati bir hücreye ekleyin.", prompt: "Bugünün tarihini A1 hücresine yaz.", helpDescription: "BUGÜN() formülü bugünün tarihini, ŞİMDİ() formülü ise şu anki tarih ve saati verir.", syntax: "=BUGÜN()", syntaxExample: "Bir fatura şablonunda tarihi otomatik olarak günceller.", svgComponent: AnimatedTodayNowSVG, stars: 0 },
            { id: "networkdays", title: "İş Günlerini Hesapla (TAMİŞGÜNÜ)", description: "İki tarih arasındaki hafta sonları hariç iş günü sayısını bulun.", prompt: "A1 başlangıç ve B1 bitiş tarihleri arasındaki iş günü sayısını hesapla.", helpDescription: "İki tarih arasındaki hafta sonları ve (isterseniz) resmi tatiller hariç kaç iş günü olduğunu sayar.", syntax: "=TAMİŞGÜNÜ(başlangıç_tarihi; bitiş_tarihi; [tatiller])", syntaxExample: "Bir projenin başlangıç ve bitiş tarihleri arasında kaç gün çalışılacağını hesaplar.", svgComponent: AnimatedNetworkdaysSVG, stars: 0 },
            { id: "workday", title: "İş Günü Ekle/Çıkar (İŞGÜNÜ)", description: "Bir tarihe belirli sayıda iş günü ekleyerek bitiş tarihini bulun.", prompt: "A1'deki başlangıç tarihine 10 iş günü ekle.", helpDescription: "Belirli bir tarihten ileri veya geri sayarken sadece iş günlerini (hafta sonlarını atlayarak) sayar.", syntax: "=İŞGÜNÜ(başlangıç_tarihi; gün_sayısı; [tatiller])", syntaxExample: "Bugünden itibaren 5 iş günü sonrasının hangi tarihe denk geldiğini bulur.", svgComponent: AnimatedWorkdaySVG, stars: 0 },
            { id: "date", title: "Tarih Oluştur (TARİH)", description: "Ayrı hücrelerdeki yıl, ay ve gün değerlerini birleştirerek geçerli bir tarih oluşturun.", prompt: "A1'deki yıl, B1'deki ay ve C1'deki gün sayılarını birleştirip tarih oluştur.", helpDescription: "Yıl, ay ve gün sayılarını birleştirerek geçerli bir Excel tarihi oluşturur.", syntax: "=TARİH(yıl; ay; gün)", syntaxExample: "A1'de 2023, B1'de 5, C1'de 15 varsa, '15.05.2023' tarihini oluşturur.", svgComponent: AnimatedDateSVG, stars: 0 },
            { id: "dateparts", title: "Tarihin Parçalarını Al (YIL/AY/GÜN)", description: "Bir tarihin yılını, ayını veya gününü ayrı bir hücreye alın.", prompt: "A1 hücresindeki tarihin sadece yılını al.", helpDescription: "Bir tarihin içinden sadece yıl, ay veya gün bilgisini çekip almanızı sağlar.", syntax: "=YIL(seri_no)", syntaxExample: "'15.05.2023' tarihinden 2023 sonucunu alır.", svgComponent: AnimatedDatepartsSVG, stars: 0 },
            { id: "edate", title: "Ay Ekle/Çıkar (SERİTARİH)", description: "Bir tarihe belirli sayıda ay ekleyerek veya çıkararak yeni tarihi bulun.", prompt: "A1'deki tarihe 6 ay ekle.", helpDescription: "Bir tarihin üzerine tam ay eklemenizi veya çıkarmanızı sağlar.", syntax: "=SERİTARİH(başlangıç_tarihi; aylar)", syntaxExample: "'15.01.2023' tarihine 3 ay ekleyerek '15.04.2023' sonucunu verir.", svgComponent: AnimatedEdateSVG, stars: 0 },
            { id: "eomonth", title: "Ay Sonu Tarihi (SERİAY)", description: "Bir tarihten belirli sayıda ay sonraki veya önceki ayın son gününü bulun.", prompt: "A1'deki tarihten 2 ay sonraki ayın son gününü bul.", helpDescription: "Bir tarihten belirli sayıda ay ileri veya geri giderek o ayın son gününün tarihini verir.", syntax: "=SERİAY(başlangıç_tarihi; aylar)", syntaxExample: "'15.01.2023' tarihinden 1 ay sonrasının son gününü, yani '28.02.2023' tarihini bulur.", svgComponent: AnimatedEomonthSVG, stars: 0 },
            { id: "weekday", title: "Haftanın Günü (HAFTANINGÜNÜ)", description: "Bir tarihin haftanın hangi gününe (Pazartesi=1, Pazar=7) denk geldiğini bulun.", prompt: "A1'deki tarihin haftanın kaçıncı günü olduğunu bul.", helpDescription: "Bir tarihin haftanın hangi gününe denk geldiğini sayı olarak verir (örneğin, Pazartesi için 2).", syntax: "=HAFTANINGÜNÜ(seri_no; [döndür_tür])", syntaxExample: "Eğer tarih Salı gününe denk geliyorsa, 3 sonucunu verir (Pazar=1 varsayılanı ile).", svgComponent: AnimatedWeekdaySVG, stars: 0 },
            { id: "weeknum", title: "Hafta Sayısı (HAFTASAY)", description: "Bir tarihin, yılın kaçıncı haftasına denk geldiğini bulun.", prompt: "A1'deki tarihin yılın kaçıncı haftasında olduğunu bul.", helpDescription: "Bir tarihin yılın kaçıncı haftasına denk geldiğini sayı olarak verir.", syntax: "=HAFTASAY(seri_no; [döndür_tür])", syntaxExample: "'20.01.2023' tarihi için 4 sonucunu (yılın 4. haftası) verir.", svgComponent: AnimatedWeeknumSVG, stars: 0 },
        ]
    },
    {
        category: 'Dinamik Dizi Formülleri',
        icon: LayersIcon,
        examples: [
            { id: "filter", title: "FİLTRELE (FILTER)", description: "Bir veri aralığını, belirlediğiniz koşullara göre filtreleyin.", prompt: "A sütununda 'Satış' departmanı olan tüm kayıtları listele.", helpDescription: "Bir tablodaki verileri belirlediğiniz bir şarta göre süzer ve sonuçları yeni bir alana listeler. (Excel 365+)", syntax: "=FİLTRELE(dizi; dahil_et; [boşsa])", syntaxExample: "A1:C100 aralığındaki verilerden, B sütununda 'Ankara' yazan tüm satırları getirir.", svgComponent: AnimatedFilterSVG, stars: 0 },
            { id: "sort", title: "SIRALA (SORT)", description: "Bir veri aralığını belirli bir sütuna göre sıralayın.", prompt: "A1:D100 aralığını, C sütununa göre büyükten küçüğe sırala.", helpDescription: "Bir tablodaki veya listedeki verileri istediğiniz bir sütuna göre sıralar. (Excel 365+)", syntax: "=SIRALA(dizi; [sıralama_dizini]; [sıralama_düzeni])", syntaxExample: "A1:C100 aralığını, 2. sütuna (B sütunu) göre artan şekilde sıralar.", svgComponent: AnimatedSortSVG, stars: 0 },
            { id: "unique", title: "BENZERSİZ (UNIQUE)", description: "Bir listedeki yinelenen değerleri kaldırarak sadece benzersiz değerleri listeleyin.", prompt: "A sütunundaki müşteri listesinin benzersiz halini oluştur.", helpDescription: "Bir listede tekrar eden kayıtları temizler ve sadece benzersiz olanları listeler. (Excel 365+)", syntax: "=BENZERSİZ(dizi)", syntaxExample: "'Elma, Armut, Elma, Kiraz' listesinden 'Elma, Armut, Kiraz' sonucunu üretir.", svgComponent: AnimatedUniqueSVG, stars: 0 },
            { id: "sequence", title: "SIRA (SEQUENCE)", description: "Belirli sayıda satır ve sütundan oluşan ardışık bir sayı dizisi oluşturun.", prompt: "1'den 100'e kadar sıralı bir liste oluştur.", helpDescription: "Otomatik olarak sıralı sayılar oluşturmanızı sağlar (örneğin 1'den 1000'e kadar). (Excel 365+)", syntax: "=SIRA(satırlar; [sütunlar]; [başlangıç]; [adım])", syntaxExample: "=SIRA(10) formülü, 1'den 10'a kadar olan sayıları alt alta listeler.", svgComponent: AnimatedSequenceSVG, stars: 0 },
        ]
    },
    {
        category: 'Web ve Dış Veri Fonksiyonları',
        icon: GlobeIcon,
        examples: [
            { id: "webservice", title: "WEB SERVİSİ (WEBSERVICE)", description: "Bir web servisinden (API) doğrudan veri alın.", prompt: "Belirli bir URL'deki API'den veri çek.", helpDescription: "Bir web servisinden (API) veri çekmek için kullanılır. Örneğin, canlı döviz kurları veya hava durumu verileri gibi bilgileri doğrudan sayfanıza almanızı sağlar.", syntax: "=WEBSERVICE(url)", syntaxExample: "Bir döviz kuru API'sinin URL'sini kullanarak anlık Dolar/TL kurunu bir hücreye çeker.", svgComponent: AnimatedWebServiceSVG, stars: 0 },
            { id: "filterxml", title: "XML FİLTRELE (FILTERXML)", description: "Web servislerinden veya XML içeriğinden belirli verileri (XPath kullanarak) ayıklayın.", prompt: "Bir web sitesinden belirli bir veriyi çekmek istiyorum (örneğin ürün fiyatı).", helpDescription: "XML veya HTML formatındaki verilerden belirli bir parçayı ayıklamak için kullanılır. Web sitelerinden veri kazımak (web scraping) için çok güçlü bir araçtır.", syntax: "=FILTERXML(xml; xpath)", syntaxExample: "WEBSERVICE ile alınan XML verisinden, `//kur/alis` gibi bir XPath ifadesiyle sadece alış kurunu ayıklar.", svgComponent: AnimatedFilterXmlSVG, stars: 0 },
        ]
    },
     {
        category: 'Veri Analizi ve Görselleştirme',
        icon: TrendingUpIcon,
        examples: [
            { id: "subtotal", title: "ALTTOPLAM (SUBTOTAL)", description: "Filtrelenmiş veya gizlenmiş verileri yok sayarak toplama, sayma, ortalama alma gibi işlemler yapın.", prompt: "Filtreleme yaptığımda sadece görünen hücrelerin toplamını al.", helpDescription: "Normal TOPLA formülünün aksine, bir liste filtrelendiğinde sadece görünür olan hücreleri toplar (veya sayar, ortalamasını alır). Tablolar için hayat kurtarıcıdır.", syntax: "=ALTTOPLAM(işlev_sayısı; başvuru1)", syntaxExample: "Filtrelenmiş bir listenin altında, sadece görünürdeki satışların toplamını verir. `işlev_sayısı` 9 veya 109'dur (toplama için).", svgComponent: AnimatedSubtotalSVG, stars: 0 },
            { id: "aggregate", title: "TOPLAMA (AGGREGATE)", description: "Hatalı değerleri ve gizli satırları yok sayarak gelişmiş hesaplamalar yapın.", prompt: "Listemde hatalı değerler var ama yine de toplam almak istiyorum.", helpDescription: "ALTTOPLAM'ın süper güçlü halidir. Hem gizli satırları hem de #YOK!, #DEĞER! gibi hata içeren hücreleri yok sayarak hesaplama yapabilir.", syntax: "=TOPLAMA(işlev_no; seçenekler; dizi)", syntaxExample: "Bir aralıkta hatalı değerler olsa bile, bu hataları göz ardı ederek geri kalan sayıların toplamını güvenli bir şekilde hesaplar.", svgComponent: AnimatedAggregateSVG, stars: 0 },
            { id: "cf-row-highlight", title: "Koşullu Biçimlendirme: Satırı Vurgula", description: "Bir hücredeki değere (örn: 'Bitti', 'Gecikti') göre tüm satırı otomatik olarak renklendirin.", prompt: "Durum sütununda 'Tamamlandı' yazan satırları yeşile boya.", helpDescription: "Bu bir formül değil, bir tekniktir. Koşullu Biçimlendirme içinde formül kullanarak, bir hücredeki değere göre tüm satırın rengini dinamik olarak değiştirmenizi sağlar.", syntax: "Koşullu Biçimlendirme > Yeni Kural > Formül Kullan", syntaxExample: "Tüm tabloyu seçip, koşullu biçimlendirme formülü olarak `=$C2=\"Bitti\"` girerseniz, C sütununda 'Bitti' yazan tüm satırlar otomatik olarak biçimlenir.", svgComponent: AnimatedCfHighlightRowSVG, stars: 0 },
        ]
    },
    {
        category: 'Finansal Formüller',
        icon: MoneyIcon,
        examples: [
            { id: "pmt", title: "DEVRESEL ÖDEME (PMT)", description: "Sabit faizli bir kredinin aylık taksit tutarını hesaplayın.", prompt: "Yıllık %12 faizle, 36 ay vadeli 50.000 TL kredinin aylık ödemesini hesapla.", helpDescription: "Bir kredinin aylık taksit tutarını hesaplar.", syntax: "=DEVRESEL_ÖDEME(oran; dönem_sayısı; bugünkü_değer)", syntaxExample: "Aylık %1 faiz oranı, 36 ay vade ve 100.000 TL kredi anaparası için aylık taksiti bulur.", svgComponent: AnimatedPmtSVG, stars: 0 },
            { id: "fv", title: "GELECEKTEKİ DEĞER (FV)", description: "Sabit periyotlarla yapılan düzenli ödemelerin gelecekteki değerini bulun.", prompt: "Her ay 500 TL yatırarak, yıllık %8 faizle 10 yılın sonunda ne kadar birikim olacağını hesapla.", helpDescription: "Düzenli olarak yapılan birikimlerin veya bir yatırımın gelecekte ulaşacağı değeri hesaplar.", syntax: "=GD(oran; dönem_sayısı; devresel_ödeme)", syntaxExample: "Aylık %0.5 faizle, 60 ay boyunca her ay 500 TL yatırmanın gelecekteki toplam değerini bulur.", svgComponent: AnimatedFvSVG, stars: 0 },
            { id: "pv", title: "BUGÜNKÜ DEĞER (PV)", description: "Gelecekteki bir dizi ödemenin bugünkü net değerini hesaplayın.", prompt: "Gelecek 5 yıl boyunca her yıl 10.000 TL getirecek bir yatırımın bugünkü değeri nedir? (Yıllık faiz %10)", helpDescription: "Gelecekteki bir paranın veya bir dizi ödemenin bugünkü değerini hesaplar.", syntax: "=BD(oran; dönem_sayısı; devresel_ödeme)", syntaxExample: "Aylık %1 faizle, 24 ay boyunca alınacak 2.000 TL'lik ödemelerin bugünkü toplam değerini bulur.", svgComponent: AnimatedPvSVG, stars: 0 },
            { id: "nper", title: "DÖNEM SAYISI (NPER)", description: "Bir kredinin geri ödenmesi için gereken taksit sayısını bulun.", prompt: "Aylık 1.500 TL taksitle, yıllık %15 faizli 40.000 TL'lik bir kredinin kaç ayda biteceğini hesapla.", helpDescription: "Bir kredinin kaç taksitte biteceğini veya bir yatırım hedefi için kaç dönem para yatırmak gerektiğini hesaplar.", syntax: "=DÖNEM_SAYISI(oran; devresel_ödeme; bugünkü_değer)", syntaxExample: "Aylık %1 faizle, -1000 TL taksitle, 50.000 TL'lik kredinin kaç ayda biteceğini bulur.", svgComponent: AnimatedNperSVG, stars: 0 },
        ]
    },
    {
        category: 'Hazır Makro Kütüphanesi',
        icon: RobotIcon,
        isMacro: true,
        examples: [
            { id: "macro-delete-duplicates", title: "Yinelenenleri Sil", description: "Belirli bir sütundaki yinelenen değerlere sahip satırları otomatik olarak silin.", prompt: "Aktif sayfadaki A sütununda yinelenen değerleri bul ve tüm satırı sil.", helpDescription: "Belirttiğiniz bir sütunu kontrol eder ve aynı değere sahip olan satırlardan ilkini bırakıp diğerlerini siler.", code: "Option Explicit\n\nSub YinelenenleriSil()\n    Dim sonSutun As Long\n    Dim sonSatir As Long\n    Dim veriAlani As Range\n\n    On Error GoTo HataYonetimi\n\n    ' Performansı artırmak için ekran güncellemeyi kapat\n    Application.ScreenUpdating = False\n\n    ' Aktif sayfadaki son dolu satırı ve sütunu bul\n    sonSatir = ActiveSheet.Cells(Rows.Count, \"A\").End(xlUp).Row\n    sonSutun = ActiveSheet.Cells(1, Columns.Count).End(xlToLeft).Column\n\n    ' Veri aralığını belirle\n    Set veriAlani = ActiveSheet.Range(Cells(1, 1), Cells(sonSatir, sonSutun))\n\n    ' Yinelenenleri sil (A Sütununu baz alarak - Key:=1)\n    veriAlani.RemoveDuplicates Columns:=1, Header:=xlYes\n\n    MsgBox \"A sütunundaki yinelenen değerlere sahip satırlar silindi.\", vbInformation, \"İşlem Tamamlandı\"\n\nCikis:\n    ' Ekran güncellemeyi tekrar aç\n    Application.ScreenUpdating = True\n    Exit Sub\n\nHataYonetimi:\n    MsgBox \"Bir hata oluştu: \" & Err.Description, vbCritical, \"Hata\"\n    GoTo Cikis\nEnd Sub", svgComponent: AnimatedMacroDeleteDuplicatesSVG, stars: 0 },
            { id: "macro-autofit-columns", title: "Sütunları Otomatik Sığdır", description: "Tüm sütunların genişliğini, içindeki en uzun veriye göre otomatik olarak ayarlayın.", prompt: "Aktif sayfadaki tüm sütunları içeriğe göre otomatik sığdır.", helpDescription: "Sayfadaki tüm sütunların genişliğini, içlerindeki en uzun metne veya sayıya göre otomatik olarak ayarlar.", code: "Option Explicit\n\nSub SutunlariOtomatikSigdir()\n    On Error Resume Next\n    ActiveSheet.Columns.AutoFit\n    On Error GoTo 0\n    MsgBox \"Tüm sütunlar içeriğe göre otomatik olarak sığdırıldı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroAutofitSVG, stars: 0 },
            { id: "macro-save-as-pdf", title: "PDF Olarak Kaydet", description: "Aktif Excel sayfasını, dosya adıyla aynı ada sahip bir PDF olarak masaüstüne kaydedin.", prompt: "Aktif sayfayı PDF olarak masaüstüne kaydet.", helpDescription: "O an açık olan Excel sayfasını, dosya adıyla aynı olacak şekilde bir PDF dosyası olarak masaüstünüze kaydeder.", code: "Option Explicit\n\nSub PDpOlarakKaydet()\n    Dim dosyaYolu As String\n    Dim dosyaAdi As String\n\n    On Error GoTo HataYonetimi\n\n    ' Masaüstü yolunu al\n    dosyaYolu = CreateObject(\"WScript.Shell\").SpecialFolders(\"Desktop\") & \"\\\\\"\n    \n    ' Dosya adını uzantısız al\n    dosyaAdi = Left(ThisWorkbook.Name, (InStrRev(ThisWorkbook.Name, \".\") - 1))\n\n    ' PDF olarak dışa aktar\n    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:=dosyaYolu & dosyaAdi & \".pdf\", Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True\n\n    MsgBox \"Sayfa, '\" & dosyaAdi & \".pdf' adıyla masaüstüne kaydedildi.\", vbInformation, \"İşlem Başarılı\"\n\n    Exit Sub\n\nHataYonetimi:\n    MsgBox \"PDF oluşturulurken bir hata oluştu: \" & Err.Description, vbCritical, \"Hata\"\nEnd Sub", svgComponent: AnimatedMacroSaveAsPDFSVG, stars: 0 },
            { id: "macro-unhide-all-sheets", title: "Tüm Gizli Sayfaları Göster", description: "Çalışma kitabındaki tüm gizli sayfaları tek seferde görünür yapın.", prompt: "Bu çalışma kitabındaki tüm gizli sayfaları göster.", helpDescription: "Excel'de tek tek uğraşmak yerine, bu çalışma kitabındaki bütün gizli sayfaları tek bir tıklamayla görünür hale getirir.", code: "Option Explicit\n\nSub GizliSayfalariGoster()\n    Dim ws As Worksheet\n    On Error Resume Next\n    Application.ScreenUpdating = False\n    For Each ws In ThisWorkbook.Worksheets\n        ws.Visible = xlSheetVisible\n    Next ws\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm gizli sayfalar görünür yapıldı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroUnhideSheetsSVG, stars: 0 },
            { id: "macro-formulas-to-values", title: "Formülleri Değere Çevir", description: "Seçili alandaki tüm formülleri, hesapladıkları sonuçlarla (değerlerle) değiştirin.", prompt: "Seçili alandaki formülleri değerlere dönüştür.", helpDescription: "Seçtiğiniz bir alandaki formülleri siler ve yerlerine o formüllerin bulduğu sonuçları (sayı veya metin) kalıcı olarak yazar.", code: "Option Explicit\n\nSub FormulleriDegereCevir()\n    If Selection.Cells.Count = 0 Then\n        MsgBox \"Lütfen önce bir alan seçin.\", vbExclamation, \"Seçim Yapılmadı\"\n        Exit Sub\n    End If\n    On Error Resume Next\n    Selection.Value = Selection.Value\n    On Error GoTo 0\n    MsgBox \"Seçili alandaki formüller değerlere dönüştürüldü.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroFormulasToValuesSVG, stars: 0 },
            // FIX: Renamed AnimatedMacroSortSVG to AnimatedMacroSortSheetsSVG to match the imported component name.
            { id: "macro-sort-sheets-alpha", title: "Sayfaları Alfabetik Sırala", description: "Çalışma kitabındaki tüm sayfaları A'dan Z'ye alfabetik olarak sıralayın.", prompt: "Tüm sayfaları alfabetik olarak sırala.", helpDescription: "Çalışma kitabınızdaki tüm sayfaları isme göre A'dan Z'ye doğru otomatik olarak sıralar.", code: "Option Explicit\n\nSub SayfalariSirala()\n    Dim i As Integer\n    Dim j As Integer\n    Application.ScreenUpdating = False\n    For i = 1 To Worksheets.Count\n        For j = 1 To Worksheets.Count - 1\n            If UCase(Worksheets(j).Name) > UCase(Worksheets(j + 1).Name) Then\n                Worksheets(j).Move After:=Worksheets(j + 1)\n            End If\n        Next j\n    Next i\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm sayfalar alfabetik olarak sıralandı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroSortSheetsSVG, stars: 0 },
            { id: "macro-delete-empty-rows", title: "Boş Satırları Sil", description: "Aktif sayfadaki tamamen boş olan tüm satırları silin.", prompt: "Aktif sayfadaki tüm boş satırları sil.", helpDescription: "Sayfanızı kontrol eder ve baştan sona tamamen boş olan tüm satırları bulup temizler.", code: "Option Explicit\n\nSub BosSatirlariSil()\n    Dim sonSatir As Long\n    Dim i As Long\n    Dim silinecekAralik As Range\n\n    On Error GoTo HataYonetimi\n    Application.ScreenUpdating = False\n    Application.Calculation = xlCalculationManual\n\n    sonSatir = ActiveSheet.UsedRange.Rows.Count + ActiveSheet.UsedRange.Row - 1\n\n    For i = sonSatir To 1 Step -1\n        If WorksheetFunction.CountA(ActiveSheet.Rows(i)) = 0 Then\n            If silinecekAralik Is Nothing Then\n                Set silinecekAralik = ActiveSheet.Rows(i)\n            Else\n                Set silinecekAralik = Union(silinecekAralik, ActiveSheet.Rows(i))\n            End If\n        End If\n    Next i\n\n    If Not silinecekAralik Is Nothing Then\n        silinecekAralik.Delete\n        MsgBox \"Boş satırlar başarıyla silindi.\", vbInformation\n    Else\n        MsgBox \"Silinecek boş satır bulunamadı.\", vbInformation\n    End If\n\nCikis:\n    Application.ScreenUpdating = True\n    Application.Calculation = xlCalculationAutomatic\n    Exit Sub\n\nHataYonetimi:\n    MsgBox \"Bir hata oluştu: \" & Err.Description, vbCritical\n    GoTo Cikis\nEnd Sub", svgComponent: AnimatedMacroDeleteEmptyRowsSVG, stars: 0 },
            { id: "macro-export-each-sheet", title: "Her Sayfayı Ayrı Dışa Aktar", description: "Her bir Excel sayfasını, sayfa adıyla yeni bir Excel dosyası olarak kaydedin.", prompt: "Bu dosyadaki her sayfayı ayrı bir Excel dosyası olarak kaydet.", helpDescription: "Çalışma kitabınızdaki her bir sayfayı alır ve her birini kendi adıyla yeni, ayrı bir Excel dosyası olarak belirtilen bir klasöre kaydeder.", code: "Option Explicit\n\nSub HerSayfayiAyiKaydet()\n    Dim dosyaYolu As String\n    Dim ws As Worksheet\n\n    On Error GoTo HataYonetimi\n    Application.ScreenUpdating = False\n\n    ' Kaydedilecek klasörü seçtir\n    With Application.FileDialog(msoFileDialogFolderPicker)\n        .Title = \"Sayfaların Kaydedileceği Klasörü Seçin\"\n        If .Show = -1 Then\n            dosyaYolu = .SelectedItems(1) & \"\\\\\"\n        Else\n            Exit Sub ' Kullanıcı iptal etti\n        End If\n    End With\n\n    For Each ws In ThisWorkbook.Worksheets\n        ws.Copy\n        ActiveWorkbook.SaveAs Filename:=dosyaYolu & ws.Name & \".xlsx\", FileFormat:=xlOpenXMLWorkbook\n        ActiveWorkbook.Close SaveChanges:=False\n    Next ws\n\n    MsgBox \"Tüm sayfalar belirtilen klasöre başarıyla kaydedildi.\", vbInformation\n\nCikis:\n    Application.ScreenUpdating = True\n    Exit Sub\n\nHataYonetimi:\n    MsgBox \"Bir hata oluştu: \" & Err.Description, vbCritical\n    GoTo Cikis\nEnd Sub", svgComponent: AnimatedMacroExportSheetsSVG, stars: 0 },
            { id: "macro-create-toc", title: "İçindekiler Tablosu Oluştur", description: "'İçindekiler' adında yeni bir sayfa oluşturun ve diğer tüm sayfalara linkler ekleyin.", prompt: "Tüm sayfalar için link içeren bir içindekiler sayfası oluştur.", helpDescription: "Yeni bir 'İçindekiler' sayfası oluşturur ve bu sayfaya, çalışma kitabınızdaki diğer tüm sayfalara giden tıklanabilir bağlantılar (köprüler) ekler.", code: "Option Explicit\n\nSub IcindekilerOlustur()\n    Dim ws As Worksheet\n    Dim tocWs As Worksheet\n    Dim i As Long\n\n    On Error Resume Next\n    Application.DisplayAlerts = False\n    Worksheets(\"İçindekiler\").Delete\n    Application.DisplayAlerts = True\n    On Error GoTo 0\n\n    Set tocWs = Worksheets.Add(Before:=Worksheets(1))\n    tocWs.Name = \"İçindekiler\"\n\n    tocWs.Cells(1, 1).Value = \"Sayfa Adları\"\n    tocWs.Cells(1, 1).Font.Bold = True\n\n    i = 2\n    For Each ws In ThisWorkbook.Worksheets\n        If ws.Name <> \"İçindekiler\" Then\n            tocWs.Hyperlinks.Add Anchor:=tocWs.Cells(i, 1), Address:=\"\", SubAddress:=\"'\" & ws.Name & \"'!A1\", TextToDisplay:=ws.Name\n            i = i + 1\n        End If\n    Next ws\n\n    tocWs.Columns(1).AutoFit\n    MsgBox \"'İçindekiler' sayfası oluşturuldu.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroTocSVG, stars: 0 },
            { id: "macro-highlight-conditional", title: "Koşullu Vurgulama", description: "Seçili alanda 100'den büyük olan tüm hücreleri sarı renkle vurgulayın.", prompt: "Seçili alanda 100'den büyük sayıları sarıya boya.", helpDescription: "Seçtiğiniz hücre aralığında, belirlediğiniz bir koşula (örneğin 100'den büyük olma) uyan tüm hücreleri otomatik olarak istediğiniz renge boyar.", code: "Option Explicit\n\nSub KosulluVurgula()\n    If Selection.Cells.Count = 0 Then Exit Sub\n\n    With Selection.FormatConditions\n        .Delete\n        .Add Type:=xlCellValue, Operator:=xlGreater, Formula1:=\"=100\"\n        .Item(1).Interior.Color = vbYellow\n    End With\n    MsgBox \"Seçili alanda 100'den büyük değerler sarıya boyandı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroHighlightConditionalSVG, stars: 0 },
            { id: "macro-timestamp", title: "Otomatik Zaman Damgası", description: "A sütununa bir veri girildiğinde, B sütununa o anın tarih ve saatini otomatik olarak ekleyin. (Olay Makrosu)", prompt: "A sütunundaki bir hücre değiştiğinde, yanındaki B hücresine otomatik olarak zaman damgası ekle.", helpDescription: "Bir sütuna herhangi bir veri girdiğinizde veya değiştirdiğinizde, yanındaki sütuna o işlemin yapıldığı anın tarih ve saatini otomatik olarak yazar. Bu bir 'Olay Makrosu'dur ve ilgili sayfanın kod bölümüne yapıştırılmalıdır.", code: "Option Explicit\n\nPrivate Sub Worksheet_Change(ByVal Target As Range)\n    ' Sadece A sütunundaki değişiklikleri izle\n    If Not Intersect(Target, Me.Columns(\"A\")) Is Nothing Then\n        ' Birden fazla hücre seçiliyse işlem yapma\n        If Target.Cells.Count > 1 Then Exit Sub\n        ' Hücre boşaltılıyorsa işlem yapma\n        If IsEmpty(Target.Value) Then\n             Target.Offset(0, 1).ClearContents\n        Else\n            ' Ekran güncellemeyi geçici olarak durdur\n            Application.EnableEvents = False\n            ' B sütununa zaman damgasını ekle\n            Target.Offset(0, 1).Value = Now()\n            Target.Offset(0, 1).NumberFormat = \"dd.mm.yyyy hh:mm:ss\"\n            ' Ekran güncellemeyi tekrar aç\n            Application.EnableEvents = True\n        End If\n    End If\nEnd Sub", svgComponent: AnimatedMacroTimestampSVG, stars: 0 },
            { id: "macro-combine-sheets", title: "Tüm Sayfaları Birleştir", description: "Kitaptaki tüm sayfaların verilerini 'Birleştirilmiş' adlı yeni bir sayfada alt alta toplayın.", prompt: "Tüm sayfalardaki verileri tek bir sayfada birleştir.", helpDescription: "Çalışma kitabınızdaki tüm sayfalarda bulunan verileri kopyalar ve 'Birleştirilmiş' adında yeni bir sayfada alt alta düzgün bir şekilde yapıştırır.", code: "Option Explicit\n\nSub SayfalariBirlestir()\n    Dim ws As Worksheet\n    Dim destWs As Worksheet\n    Dim lastRow As Long\n    Dim destLastRow As Long\n\n    Application.ScreenUpdating = False\n\n    ' Eski birleştirilmiş sayfayı sil\n    Application.DisplayAlerts = False\n    On Error Resume Next\n    Worksheets(\"Birleştirilmiş\").Delete\n    On Error GoTo 0\n    Application.DisplayAlerts = True\n\n    ' Yeni hedef sayfayı oluştur\n    Set destWs = Worksheets.Add(After:=Worksheets(Worksheets.Count))\n    destWs.Name = \"Birleştirilmiş\"\n\n    ' Her sayfayı döngüye al ve verileri kopyala\n    For Each ws In ThisWorkbook.Worksheets\n        If ws.Name <> destWs.Name Then\n            lastRow = ws.Cells(ws.Rows.Count, \"A\").End(xlUp).Row\n            destLastRow = destWs.Cells(destWs.Rows.Count, \"A\").End(xlUp).Row\n\n            If destLastRow = 1 And IsEmpty(destWs.Cells(1, 1)) Then\n                 ws.Range(\"A1:Z\" & lastRow).Copy destWs.Range(\"A1\")\n            Else\n                ws.Range(\"A2:Z\" & lastRow).Copy destWs.Range(\"A\" & destLastRow + 1)\n            End If\n        End If\n    Next ws\n\n    destWs.Columns.AutoFit\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm sayfalar 'Birleştirilmiş' sayfasında toplandı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroCombineSheetsSVG, stars: 0 },
            { id: "macro-protect-all", title: "Tüm Sayfaları Koru", description: "Belirttiğiniz bir parola ile çalışma kitabındaki tüm sayfaları koruma altına alın.", prompt: "Tüm sayfaları '1234' parolasıyla korumaya al.", helpDescription: "Tek tek uğraşmak yerine, çalışma kitabınızdaki tüm sayfaları belirlediğiniz bir parola ile tek seferde kilitler.", code: "Option Explicit\n\nSub TumSayfalariKoru()\n    Dim ws As Worksheet\n    Dim parola As String\n\n    parola = InputBox(\"Lütfen tüm sayfalar için bir koruma parolası girin:\", \"Parola Girişi\")\n\n    If parola = \"\" Then\n        MsgBox \"Parola girilmedi, işlem iptal edildi.\", vbExclamation\n        Exit Sub\n    End If\n\n    Application.ScreenUpdating = False\n    On Error Resume Next\n\n    For Each ws In ThisWorkbook.Worksheets\n        ws.Protect Password:=parola\n    Next ws\n\n    On Error GoTo 0\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm sayfalar başarıyla koruma altına alındı.\", vbInformation, \"İşlem Tamamlandı\"\nEnd Sub", svgComponent: AnimatedMacroProtectSheetsSVG, stars: 0 },
            { id: "macro-unprotect-all", title: "Tüm Sayfa Korumalarını Kaldır", description: "Kitaptaki tüm sayfaların parolalı korumasını tek seferde kaldırın.", prompt: "'1234' parolasıyla korunan tüm sayfaların korumasını kaldır.", helpDescription: "Eğer birden fazla sayfayı aynı parolayla koruduysanız, bu makro hepsinin korumasını tek seferde kaldırır.", code: "Option Explicit\n\nSub TumSayfaKorumalariniKaldir()\n    Dim ws As Worksheet\n    Dim parola As String\n\n    parola = InputBox(\"Lütfen sayfaların korumasını kaldırmak için parolayı girin:\", \"Parola Girişi\")\n\n    Application.ScreenUpdating = False\n    On Error Resume Next\n\n    For Each ws In ThisWorkbook.Worksheets\n        ws.Unprotect Password:=parola\n    Next ws\n\n    On Error GoTo 0\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm sayfaların koruması başarıyla kaldırıldı.\", vbInformation, \"İşlem Tamamlandı\"\nEnd Sub", svgComponent: AnimatedMacroUnprotectSheetsSVG, stars: 0 },
            { id: "macro-find-replace-all", title: "Tüm Sayfalarda Bul ve Değiştir", description: "Bir metni, çalışma kitabının tüm sayfalarında arayıp başka bir metinle değiştirin.", prompt: "Tüm sayfalarda 'Eski Metin' ifadesini bul ve 'Yeni Metin' ile değiştir.", helpDescription: "Tek bir işlemle, çalışma kitabınızın bütün sayfalarında belirli bir kelimeyi veya ifadeyi arar ve onu istediğiniz yeni ifadeyle değiştirir.", code: "Option Explicit\n\nSub TumSayfalardaBulveDegistir()\n    Dim ws As Worksheet\n    Dim arananDeger As String\n    Dim yeniDeger As String\n\n    arananDeger = InputBox(\"Aranacak değeri girin:\", \"Bul\")\n    If arananDeger = \"\" Then Exit Sub\n\n    yeniDeger = InputBox(\"Yeni değeri girin:\", \"Değiştir\")\n\n    Application.ScreenUpdating = False\n    For Each ws In ThisWorkbook.Worksheets\n        ws.Cells.Replace What:=arananDeger, Replacement:=yeniDeger, LookAt:=xlPart, _\n        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _\n        ReplaceFormat:=False\n    Next ws\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm sayfalarda bul ve değiştir işlemi tamamlandı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroFindReplaceAllSVG, stars: 0 },
            { id: "macro-refresh-pivots", title: "Tüm Pivot Tabloları Yenile", description: "Kitaptaki tüm Pivot Tabloları ve Pivot Grafikleri tek seferde güncelleyin.", prompt: "Tüm pivot tabloları yenile.", helpDescription: "Veri kaynağınızda değişiklik yaptığınızda, bu makro çalışma kitabınızdaki bütün Pivot Tabloları tek tek bulur ve günceller.", code: "Option Explicit\n\nSub TumPivotlariYenile()\n    On Error Resume Next\n    ThisWorkbook.RefreshAll\n    On Error GoTo 0\n    MsgBox \"Tüm Pivot Tablolar ve veri bağlantıları yenilendi.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroRefreshPivotsSVG, stars: 0 },
            { id: "macro-format-as-table", title: "Seçimi Tablo Olarak Biçimlendir", description: "Seçili veri aralığını hızlıca bir Excel Tablosuna dönüştürün.", prompt: "Seçili alanı tablo olarak biçimlendir.", helpDescription: "Seçtiğiniz ham veri aralığını, filtreleme ve sıralama gibi özelliklere sahip, biçimlendirilmiş bir Excel Tablosuna dönüştürür.", code: "Option Explicit\n\nSub SecimiTabloYap()\n    Dim seciliAlan As Range\n    Set seciliAlan = Selection\n\n    If seciliAlan Is Nothing Or seciliAlan.Cells.Count <= 1 Then\n        MsgBox \"Lütfen tablo yapılacak bir alan seçin.\", vbExclamation\n        Exit Sub\n    End If\n\n    ActiveSheet.ListObjects.Add(xlSrcRange, seciliAlan, , xlYes).Name = \"Tablo\" & ActiveSheet.ListObjects.Count + 1\nEnd Sub", svgComponent: AnimatedMacroFormatAsTableSVG, stars: 0 },
            { id: "macro-send-email", title: "Aktif Çalışma Kitabını E-posta ile Gönder", description: "Outlook kullanarak mevcut Excel dosyasını e-posta eki olarak gönderin.", prompt: "Bu dosyayı e-posta ile gönder.", helpDescription: "Outlook programını kullanarak yeni bir e-posta oluşturur ve o an açık olan Excel dosyasını otomatik olarak bu e-postaya ek olarak ekler.", code: "Option Explicit\n\nSub EpostaIleGonder()\n    On Error Resume Next\n    ThisWorkbook.SendMail Recipients:=\"\", Subject:=ThisWorkbook.Name\n    If Err.Number <> 0 Then\n        MsgBox \"E-posta gönderilemedi. Outlook'un açık olduğundan emin olun.\", vbCritical\n    End If\n    On Error GoTo 0\nEnd Sub", svgComponent: AnimatedMacroSendEmailSVG, stars: 0 },
            { id: "macro-add-header-footer", title: "Tüm Sayfalara Üstbilgi/Altbilgi Ekle", description: "Tüm sayfalara şirket adını ve sayfa numarasını içeren standart bir üstbilgi/altbilgi ekleyin.", prompt: "Tüm sayfalara üstbilgi ve altbilgi ekle.", helpDescription: "Çalışma kitabınızdaki tüm sayfalara aynı anda, sol tarafa şirket adı ve sağ tarafa 'Sayfa X / Y' şeklinde sayfa numarası ekler.", code: "Option Explicit\n\nSub UstBilgiAltBilgiEkle()\n    Dim ws As Worksheet\n    For Each ws In ThisWorkbook.Worksheets\n        With ws.PageSetup\n            .LeftHeader = \"Şirket Adı\"\n            .RightFooter = \"Sayfa &P / &N\"\n        End With\n    Next ws\n    MsgBox \"Tüm sayfalara üstbilgi ve altbilgi eklendi.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroAddHeaderFooterSVG, stars: 0 },
        ]
    },
    {
        category: 'Gelişmiş Makro Kütüphanesi',
        icon: RobotIcon,
        isMacro: true,
        examples: [
            { id: "macro-trim-all", title: "Tüm Hücrelerdeki Boşlukları Temizle", description: "Aktif sayfadaki tüm dolu hücrelerdeki gereksiz boşlukları temizleyin.", prompt: "Aktif sayfadaki tüm hücrelerdeki gereksiz boşlukları temizle.", helpDescription: "Aktif sayfadaki her bir dolu hücreyi kontrol eder ve metinlerin başındaki/sonundaki fazla boşlukları temizler.", code: "Sub TumBosluklariTemizle()\n    Dim hucre As Range\n    Application.ScreenUpdating = False\n    For Each hucre In ActiveSheet.UsedRange\n        If Not IsError(hucre) Then\n            hucre.Value = Trim(hucre.Value)\n        End If\n    Next hucre\n    Application.ScreenUpdating = True\n    MsgBox \"Tüm hücrelerdeki boşluklar temizlendi.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroTrimAllCellsSVG, stars: 0 },
            { id: "macro-highlight-negatives", title: "Negatif Sayıları Vurgula", description: "Seçili alandaki tüm negatif sayıları kırmızı ve kalın olarak biçimlendirin.", prompt: "Seçili alandaki negatif sayıları kırmızı yap.", helpDescription: "Seçtiğiniz aralıktaki tüm sayıları kontrol eder ve sıfırdan küçük olanları kırmızı renkte ve kalın olarak işaretler.", code: "Sub NegatifleriVurgula()\n    Dim hucre As Range\n    If Selection.Cells.Count = 0 Then Exit Sub\n    For Each hucre In Selection\n        If IsNumeric(hucre.Value) And hucre.Value < 0 Then\n            With hucre.Font\n                .Color = vbRed\n                .Bold = True\n            End With\n        End If\n    Next hucre\n    MsgBox \"Negatif sayılar vurgulandı.\", vbInformation\nEnd Sub", svgComponent: AnimatedMacroHighlightNegativesSVG, stars: 0 },
            { id: "macro-add-borders", title: "Seçili Alana Kenarlık Ekle", description: "Seçili hücre aralığının tüm kenarlarına standart bir kenarlık ekleyin.", prompt: "Seçili alana kenarlık ekle.", helpDescription: "Seçtiğiniz hücre grubunun hem iç hem de dış kenarlarına hızlıca standart bir çizgi ekler.", code: "Sub KenarlikEkle()\n    If Selection.Cells.Count > 0 Then\n        Selection.Borders.LineStyle = xlContinuous\n    End If\nEnd Sub", svgComponent: AnimatedMacroAddBordersSVG, stars: 0 },
            { id: "macro-remove-hyperlinks", title: "Köprüleri Kaldır", description: "Seçili alandaki tüm köprüleri (hyperlink) kaldırın, ancak metni koruyun.", prompt: "Seçili alandaki köprüleri kaldır.", helpDescription: "Seçiminizdeki tüm tıklanabilir linkleri kaldırır, fakat hücredeki yazıları olduğu gibi bırakır.", code: "Sub KopruleriKaldir()\n    If Selection.Cells.Count > 0 Then\n        Selection.Hyperlinks.Delete\n    End If\nEnd Sub", svgComponent: AnimatedMacroRemoveHyperlinksSVG, stars: 0 },
            { id: "macro-text-to-columns", title: "Metni Sütunlara Böl", description: "Seçili sütundaki veriyi, belirtilen bir ayıraca (örn: virgül, noktalı virgül) göre birden çok sütuna bölün.", prompt: "A sütunundaki veriyi virgül ayıracına göre sütunlara böl.", helpDescription: "Bir hücredeki 'Ad,Soyad' gibi bir metni, belirlediğiniz bir karaktere (virgül, boşluk vb.) göre ayırarak farklı sütunlara yerleştirir.", code: "Sub MetniSutunlaraBol()\n    If Selection.Columns.Count <> 1 Then\n        MsgBox \"Lütfen tek bir sütun seçin.\", vbExclamation\n        Exit Sub\n    End If\n    Selection.TextToColumns Destination:=Selection.Cells(1, 1), DataType:=xlDelimited, Semicolon:=True\nEnd Sub", svgComponent: AnimatedMacroTextToColumnsSVG, stars: 0 },
            { id: "macro-go-to-sheet", title: "Sayfaya Git", description: "Adını yazdığınız sayfaya hızla gidin.", prompt: "'Rapor' adlı sayfaya git.", helpDescription: "Sizden bir sayfa adı ister ve o isimdeki sayfayı hemen aktif hale getirir. Çok sayfalı dosyalarda zaman kazandırır.", code: "Sub SayfayaGit()\n    Dim sayfaAdi As String\n    sayfaAdi = InputBox(\"Gitmek istediğiniz sayfanın adını girin:\", \"Sayfaya Git\")\n    On Error Resume Next\n    If sayfaAdi <> \"\" Then\n        Worksheets(sayfaAdi).Activate\n    End If\n    On Error GoTo 0\nEnd Sub", svgComponent: AnimatedMacroGoToSheetSVG, stars: 0 },
            { id: "macro-create-chart", title: "Hızlı Grafik Oluştur", description: "Seçili veriden varsayılan bir sütun grafik oluşturun.", prompt: "Seçili veriden bir grafik oluştur.", helpDescription: "Seçtiğiniz veri aralığına dayanarak hızlı bir şekilde standart bir sütun grafiği oluşturur ve sayfaya ekler.", code: "Sub HizliGrafikOlustur()\n    Dim chrt As ChartObject\n    Set chrt = ActiveSheet.ChartObjects.Add(Left:=300, Width:=300, Top:=50, Height:=200)\n    chrt.Chart.SetSourceData Source:=Selection\n    chrt.Chart.ChartType = xlColumnClustered\nEnd Sub", svgComponent: AnimatedMacroCreateChartSVG, stars: 0 },
            { id: "macro-freeze-top-row", title: "İlk Satırı Dondur", description: "Aşağı kaydırdığınızda başlık satırının her zaman görünür kalmasını sağlayın.", prompt: "İlk satırı dondur.", helpDescription: "Sayfada aşağı doğru indiğinizde, ilk satırın (genellikle başlıkların olduğu satır) her zaman görünür kalmasını sağlar.", code: "Sub IlkSatiriDondur()\n    With ActiveWindow\n        .SplitColumn = 0\n        .SplitRow = 1\n        .FreezePanes = True\n    End With\nEnd Sub", svgComponent: AnimatedMacroFreezeTopRowSVG, stars: 0 },
            { id: "macro-insert-checkboxes", title: "Onay Kutuları Ekle", description: "Seçili aralıktaki her hücreye bir onay kutusu (checkbox) ekleyin.", prompt: "Seçili alana onay kutuları ekle.", helpDescription: "Seçtiğiniz her bir hücrenin içine tıklanabilir bir onay kutusu ekler. Görev listeleri için idealdir.", code: "Sub OnayKutulariEkle()\n    Dim hucre As Range\n    For Each hucre In Selection\n        With ActiveSheet.CheckBoxes.Add(hucre.Left, hucre.Top, hucre.Width, hucre.Height)\n            .Text = \"\"\n        End With\n    Next hucre\nEnd Sub", svgComponent: AnimatedMacroInsertCheckboxesSVG, stars: 0 },
            { id: "macro-export-csv", title: "Seçimi CSV Olarak Aktar", description: "Seçili alanı, masaüstüne yeni bir CSV dosyası olarak kaydedin.", prompt: "Seçili alanı CSV olarak dışa aktar.", helpDescription: "Sadece seçtiğiniz veri aralığını alır ve onu masaüstünüze virgülle ayrılmış değerler (CSV) formatında yeni bir dosya olarak kaydeder.", code: "Sub SecimiCSVOlarakAktar()\n    Dim yeniKitap As Workbook\n    Dim dosyaYolu As String\n\n    dosyaYolu = CreateObject(\"WScript.Shell\").SpecialFolders(\"Desktop\") & \"\\ExportedData.csv\"\n    \n    Selection.Copy\n    Set yeniKitap = Workbooks.Add(1)\n    With yeniKitap\n        .Sheets(1).Cells(1).PasteSpecial xlPasteValues\n        .SaveAs Filename:=dosyaYolu, FileFormat:=xlCSV, CreateBackup:=False\n        .Close False\n    End With\nEnd Sub", svgComponent: AnimatedMacroExportSelectionToCSVSVG, stars: 0 },
            { id: "macro-create-dropdown", title: "Açılır Liste Oluştur", description: "Veri doğrulama kullanarak bir açılır liste oluşturun.", prompt: "Seçili hücreye 'Evet,Hayır,Belki' seçeneklerini içeren bir açılır liste ekle.", helpDescription: "Bir hücreye tıkladığınızda seçebileceğiniz bir seçenek listesi (Evet/Hayır gibi) oluşturur.", code: "Sub AcilirListeOlustur()\n    With Selection.Validation\n        .Delete\n        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=\"Evet,Hayır,Belki\"\n        .IgnoreBlank = True\n        .InCellDropdown = True\n    End With\nEnd Sub", svgComponent: AnimatedMacroCreateDropdownListSVG, stars: 0 },
            { id: "macro-add-comment", title: "Değere Göre Not Ekle", description: "Seçili alanda belirli bir değeri ('Kontrol Et' gibi) içeren hücrelere not ekleyin.", prompt: "Seçili alanda 'Kontrol Et' yazan hücrelere not ekle.", helpDescription: "Seçiminizde, belirlediğiniz bir metni içeren tüm hücreleri bulur ve onlara 'Bu veri teyit edilmelidir.' şeklinde bir not ekler.", code: "Sub DegereGoreNotEkle()\n    Dim hucre As Range\n    For Each hucre In Selection\n        If hucre.Value = \"Kontrol Et\" Then\n            hucre.ClearComments\n            hucre.AddComment \"Bu veri teyit edilmelidir.\"\n        End If\n    Next hucre\nEnd Sub", svgComponent: AnimatedMacroCommentOnCellsWithValueSVG, stars: 0 },
            { id: "macro-count-colors", title: "Renkli Hücreleri Say", description: "Belirli bir renge sahip hücrelerin sayısını bulun.", prompt: "Seçili alanda sarı renge boyanmış hücreleri say.", helpDescription: "Belirlediğiniz bir referans hücrenin rengine göre, seçtiğiniz alanda o renge sahip kaç tane hücre olduğunu sayar.", code: "Function RenkliSay(saymaAraligi As Range, renkOrnegi As Range) As Long\n    Dim hucre As Range\n    Dim renk As Long\n    Dim sayac As Long\n    renk = renkOrnegi.Interior.Color\n    For Each hucre In saymaAraligi\n        If hucre.Interior.Color = renk Then\n            sayac = sayac + 1\n        End If\n    Next hucre\n    RenkliSay = sayac\nEnd Function", svgComponent: AnimatedMacroCountColoredCellsSVG, stars: 0 },
            { id: "macro-break-links", title: "Dış Bağlantıları Kopar", description: "Çalışma kitabındaki diğer dosyalara olan tüm dış bağlantıları koparın.", prompt: "Bu dosyadaki tüm dış bağlantıları kopar.", helpDescription: "Dosyanızın yavaşlamasına veya hata vermesine neden olan, diğer Excel dosyalarına yapılmış tüm bağlantıları bulur ve koparır. Verilerin son hali kalır.", code: "Sub DisBaglantilariKopar()\n    Dim baglantilar As Variant\n    baglantilar = ThisWorkbook.LinkSources(xlExcelLinks)\n    If Not IsEmpty(baglantilar) Then\n        For i = 1 To UBound(baglantilar)\n            ThisWorkbook.BreakLink Name:=baglantilar(i), Type:=xlLinkTypeExcelLinks\n        Next i\n    End If\nEnd Sub", svgComponent: AnimatedMacroBreakAllLinksSVG, stars: 0 },
            { id: "macro-zoom-selection", title: "Seçime Yakınlaş", description: "Ekran görünümünü, sadece seçili hücrelerin sığacağı şekilde yakınlaştırın.", prompt: "Seçili alana yakınlaş.", helpDescription: "Sadece seçtiğiniz hücrelerin ekrana tam sığacağı şekilde sayfanın yakınlaştırma (zoom) oranını otomatik olarak ayarlar.", code: "Sub SecimeYakinlas()\n    If Not Selection Is Nothing Then\n        ActiveWindow.Zoom = True\n    End If\nEnd Sub", svgComponent: AnimatedMacroZoomToSelectionSVG, stars: 0 },
            { id: "macro-insert-serial", title: "Sıra Numarası Ekle", description: "Seçili sütuna 1'den başlayarak artan sıra numaraları ekleyin.", prompt: "Seçili sütuna sıra numarası ekle.", helpDescription: "Seçtiğiniz sütundaki hücrelere, yukarıdan aşağıya doğru 1'den başlayarak otomatik olarak artan numaralar yazar.", code: "Sub SiraNumarasiEkle()\n    Dim i As Long\n    For i = 1 To Selection.Cells.Count\n        Selection.Cells(i).Value = i\n    Next i\nEnd Sub", svgComponent: AnimatedMacroInsertSerialNumbersSVG, stars: 0 },
            { id: "macro-save-close", title: "Kaydet ve Kapat", description: "Aktif çalışma kitabını kaydedip kapatın.", prompt: "Dosyayı kaydet ve kapat.", helpDescription: "O an açık olan Excel dosyasını kaydeder ve ardından kapatır.", code: "Sub KaydetVeKapat()\n    ThisWorkbook.Close SaveChanges:=True\nEnd Sub", svgComponent: AnimatedMacroSaveAndCloseSVG, stars: 0 },
            { id: "macro-toggle-gridlines", title: "Kılavuz Çizgilerini Aç/Kapat", description: "Aktif penceredeki kılavuz çizgilerinin görünürlüğünü değiştirin.", prompt: "Kılavuz çizgilerini gizle/göster.", helpDescription: "Excel'in standart hücre çizgilerini (kılavuz çizgileri) bir bastığınızda gizler, bir daha bastığınızda gösterir.", code: "Sub KilavuzCizgileriniDegistir()\n    ActiveWindow.DisplayGridlines = Not ActiveWindow.DisplayGridlines\nEnd Sub", svgComponent: AnimatedMacroToggleGridlinesSVG, stars: 0 },
            { id: "macro-create-summary", title: "Özet Sayfası Oluştur", description: "Her sayfadaki belirli bir hücreden (örn: A1) veri alıp bir özet sayfası oluşturun.", prompt: "Her sayfanın A1 hücresindeki değeri alarak bir özet sayfası oluştur.", helpDescription: "Kitabınızdaki her bir sayfanın belirlediğiniz bir hücresindeki (örneğin A1) değeri alır ve bu değerleri yeni bir 'Özet' sayfasında listeler.", code: "Sub OzetSayfasiOlustur()\n    Dim ws As Worksheet, summaryWs As Worksheet\n    Dim i As Long\n    Set summaryWs = Worksheets.Add(Before:=Sheets(1))\n    summaryWs.Name = \"Özet\"\n    i = 1\n    For Each ws In ThisWorkbook.Worksheets\n        If ws.Name <> \"Özet\" Then\n            summaryWs.Cells(i, 1).Value = ws.Name\n            summaryWs.Cells(i, 2).Value = ws.Range(\"A1\").Value\n            i = i + 1\n        End If\n    Next ws\nEnd Sub", svgComponent: AnimatedMacroCreateSummarySheetSVG, stars: 0 }
        ]
    },
    {
        category: 'Gelişmiş Araçlar ve Teknikler',
        icon: ToolsIcon,
        isTool: true,
        examples: [
             { id: "tool-power-query-folder", title: "Power Query: Klasörden Birleştir", description: "Bir klasördeki tüm Excel dosyalarını otomatik olarak tek bir tabloda birleştirin.", prompt: "Bir klasördeki tüm Excel dosyalarını birleştir.", helpDescription: "Bu bir formül veya makro değil, Excel'in kendi 'Veri Al ve Dönüştür (Power Query)' özelliğini kullanan bir tekniktir. Bir klasördeki tüm Excel veya CSV dosyalarını seçip, onları tek bir büyük tabloda otomatik olarak birleştirmenizi sağlar.", steps: [
                 "Veri sekmesine gidin.",
                 "`Veri Al` > `Dosyadan` > `Klasörden` seçeneğini tıklayın.",
                 "Excel dosyalarınızın bulunduğu klasörü seçin.",
                 "Açılan pencerede `Birleştir` > `Birleştir ve Yükle`'yi tıklayın."
             ], svgComponent: AnimatedPowerQuerySVG, stars: 0 }
        ]
    }
];